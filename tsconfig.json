{
  "compilerOptions": {
    "target": "es2016",
    "experimentalDecorators": true,
    "module": "commonjs",
    "rootDir": "./",
    // "moduleResolution": "node",                     /* Specify how TypeScript looks up a file from a given module specifier. */
    "baseUrl": "./",
    "paths": {
      "@config": ["./config/index"],
      "@mongoModels": ["./src/models/mongo/index"],
      "@postgresModels": ["./src/models/postgres/index"],
      "@logger": ["./src/modules/logger/index"],
      "@errors": ["./src/helpers/errors"],
      "@runners/*": ["./runners/*"],
      "@helpers/*": ["./src/helpers/*"],
      "@models/*": ["./src/models/*"],
      "@modules/*": ["./src/modules/*"],
      "@services/*": ["./src/services/*"],
      "@api-user/*": ["./src/services/api-user/*"],
      "@type/*": ["./src/types/*"],
      "@mocks/*": ["./test/mocks/*"]
    },
    "resolveJsonModule": true,
    "allowArbitraryExtensions": true,
    "allowJs": true,
    "declaration": false,
    "sourceMap": false,
    "outDir": "./dist",
    "isolatedModules": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": false,
    "forceConsistentCasingInFileNames": true,
    "strict": true,
    "noImplicitAny": false,
    "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
    // "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    // "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
    // "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
    // "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
    // "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
    // "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
    // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */
    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */
    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */
    // "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    // "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
    // "noImplicitOverride": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */
    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
    // "allowUnusedLabels": true,                        /* Disable error reporting for unused labels. */
    // "allowUnreachableCode": true,                     /* Disable error reporting for unreachable code. */
    "skipLibCheck": true
  },
  "include": ["./**/*", "./**/*.d.ts"],
  "exclude": ["node_modules"]
}
